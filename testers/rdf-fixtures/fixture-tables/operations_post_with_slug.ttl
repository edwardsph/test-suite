@prefix test: <http://ontologi.es/doap-tests#> .
@prefix deps: <http://ontologi.es/doap-deps#>.
@prefix httph:<http://www.w3.org/2007/ont/httph#> .
@prefix http: <http://www.w3.org/2007/ont/http#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix nfo:  <http://www.semanticdesktop.org/ontologies/2007/03/22/nfo#> .
@prefix dqm:  <http://purl.org/dqm-vocabulary/v1/dqm#> .
@prefix :     <https://github.com/solid/test-suite/blob/master/testers/rdf-fixtures/fixture-tables/operations_protected_ldp_bc.ttl#> .

:test_list a test:FixtureTable ;
    rdfs:comment "These tests exist to test Slug headers"@en ;
    test:fixtures (
        :setup_init
        :slug_foo_slash_no_link
        :slug_foo_no_link
#        :teardown
    ) .

<http://example.org/httplist#http_req_res_list_regex_reuser>
    a nfo:SoftwareItem ;
    deps:test-requirement "Web::Solid::Test::HTTPLists"^^deps:CpanId ;
    nfo:definesFunction "http_req_res_list_regex_reuser" .

<http://example.org/httplist#http_req_res_list>
    a nfo:SoftwareItem ;
    deps:test-requirement "Web::Solid::Test::HTTPLists"^^deps:CpanId ;
    nfo:definesFunction "http_req_res_list" .

:setup_init a test:AutomatedTest ;
    test:purpose "Set up initial resources as needed by the rest of the tests"@en ;
    test:test_script <http://example.org/httplist#http_req_res_list> ;
    test:params [
        <http://example.org/httplist/param#bearer> <https://idp.test.solidproject.org/tokens/ALICE_ID_GOOD> ;
        test:steps (
            [
                test:request :setup_container ;
                test:response_assertion :created_ok_res
            ]
        )
    ] .

:setup_container a http:RequestMessage ;
    rdfs:comment "Set up RDF BC resource.";
    http:method "POST" ;
    http:requestURI </> ;
    httph:slug "test-slug-bc" ;
    httph:content_type "text/turtle";
    httph:link """<http://www.w3.org/ns/ldp#BasicContainer>; rel=\"type\"""";
    http:content """@prefix dc: <http://purl.org/dc/terms/>.
@prefix ldp: <http://www.w3.org/ns/ldp#>.
<> a ldp:BasicContainer ;
   dc:title "Initial container for tests."@en .""" .

:created_ok_res a http:ResponseMessage ;
    http:status 201 .

:slug_foo_slash_no_link a test:AutomatedTest ;
    test:purpose "Create a container with foo/ appended to the request-URI."@en ;
    test:test_script <http://example.org/httplist#http_req_res_list_regex_reuser> ;
    test:params [
        <http://example.org/httplist/param#bearer> <https://idp.test.solidproject.org/tokens/ALICE_ID_GOOD> ;
        test:steps (
            [
                test:request :post_slug_foo_slash_no_link_req  ;
                test:response_assertion :post_slug_foo_slash_no_link_ok_res
            ]
            [
                test:request :get_slug_foo_slash_no_link_req  ;
                test:response_assertion :ok_res
            ]
        )
    ] .

:post_slug_foo_slash_no_link_req a http:RequestMessage ;
    http:method "POST" ;
    http:requestURI </test-slug-bc/> ;
    httph:slug "foo/" ;
    httph:content_type "text/turtle";
    http:content """@prefix dc: <http://purl.org/dc/terms/>.
@prefix ldp: <http://www.w3.org/ns/ldp#>.
<> a ldp:BasicContainer ;
   dc:title "Initial container for tests."@en .""" .

:post_slug_foo_slash_no_link_ok_res a http:ResponseMessage ;
    rdfs:comment "Verifies that the Location URL ends with foo/ and extracts for the next GET"@en ;
    httph:location '<(.*?foo/$)>'^^dqm:regex ;
    http:status 201 .


:slug_foo_no_link a test:AutomatedTest ;
    test:purpose "Create a resource with foo.ttl appended to the request-URI."@en ;
    test:test_script <http://example.org/httplist#http_req_res_list_regex_reuser> ;
    test:params [
        <http://example.org/httplist/param#bearer> <https://idp.test.solidproject.org/tokens/ALICE_ID_GOOD> ;
        test:steps (
            [
                test:request :post_slug_foo_no_link_req  ;
                test:response_assertion :post_slug_foo_no_link_ok_res
            ]
            [
                test:request :get_slug_foo_no_link_req  ;
                test:response_assertion :ok_res
            ]
        )
    ] .

:post_slug_foo_no_link_req a http:RequestMessage ;
    http:method "POST" ;
    http:requestURI </test-slug-bc/> ;
    httph:slug "foo" ;
    httph:content_type "text/turtle";
    http:content """@prefix dc: <http://purl.org/dc/terms/>.
   dc:title "Resulting RDF resource."@en .""" .

:post_slug_foo_no_link_ok_res a http:ResponseMessage ;
    rdfs:comment "Verifies that the Location URL ends with foo.ttl and extracts for the next GET"@en ;
    httph:location '(.*?foo.ttl$)'^^dqm:regex ;
    http:status 201 .


:get_slug_foo_no_link_req a http:RequestMessage ;
    rdfs:comment "Verify that the resource can be access, the test script will use the regexp from the previous response"@en ;
    http:method "GET" .

:ok_res a http:ResponseMessage ;
    http:status 200 .

